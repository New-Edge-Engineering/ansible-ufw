---
# Ubuntu step 1 hardening from http://www.thefanclub.co.za/how-to/how-secure-ubuntu-1204-lts-server-part-1-basics
- name: ensure ufw is at the latest version
  apt:
    pkg: ufw
    state: latest
    update_cache: yes
  become: yes
  notify:
    - restart ufw
  tags:
    - ufw
    - packages

- name: UFW | check status
  command: ufw status
  become: yes
  register: ufw_status
  tags:
    - ufw

- debug: var=ufw_status.stdout_lines[0]

- name: disable ufw
  shell: "ufw disable"
  become: yes
  when: '"inactive" not in ufw_status.stdout_lines[0]'
  tags:
    - ufw

- name: set ufw to deny anything through
  shell: "ufw default deny"
  become: yes
  when: ansible_distribution_version | version_compare('14.04', '<')
  notify:
    - restart ufw
  tags:
    - ufw
    - configuration

- name: set ufw to deny anything incoming
  shell: "ufw default deny incoming"
  become: yes
  when: ansible_distribution_version | version_compare('14.04', '>=')
  notify:
    - restart ufw
  tags:
    - ufw
    - configuration

- name: set ufw to allow anything outgoing
  shell: "ufw default allow outgoing"
  become: yes
  when: ansible_distribution_version | version_compare('14.04', '>=')
  notify:
    - restart ufw
  tags:
    - ufw
    - configuration

# allow pings from given networks
- name: set ufw to allow anything from internal network
  shell: "ufw allow from {{ item }}/24"
  with_items: ufw_networks
  become: yes
  register: ufw_networks_result
  changed_when: "ufw_networks_result.stdout == 'Rules updated'"
  notify:
    - restart ufw
  tags:
    - ufw
    - configuration

- name: set ufw ingress rules
  shell: "ufw allow {{ item.port }}/{{ item.protocol }}"
  with_items: ufw_ingresses
  register: ufw_ingresses_result
  become: yes
  changed_when: "ufw_ingresses_result.stdout == 'Rules updated\nRules updated (v6)'"
  notify:
    - restart ufw
  tags:
    - ufw
    - configuration

# Ignore Directed pings
- name: allow pings
  sysctl:
    name=net.ipv4.icmp_echo_ignore_all
    state=present
    value=0
  become: yes
  tags:
    - ufw
    - configuration

- name: UFW | check status
  command: ufw status
  become: yes
  register: ufw_status
  tags:
    - ufw

# enable the firewall to protect the server
- name: enable ufw
  shell: "ufw --force enable"
  when: '"inactive" in ufw_status.stdout_lines[0]'
  become: yes
  ignore_errors: yes
  tags:
    - ufw
    - packages